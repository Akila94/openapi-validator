{
	"extends": [["spectral:oas", "off"]],
	"formats": ["oas2", "oas3"],
	"rules": {
		"check-produces-value-case-sensitive": {
			"description": "'produces' object should not contain the value 'application'",
			"type": "style",
			"given": "$.paths..produces.*",
			"severity": "error",
			"formats": ["oas2"],
			"message": "{{path}} contained a value with the invalid string '/produces/'",
			"then": {
				"function": "pattern",
				"functionOptions": {
					"notMatch": "/application/"
				}
			}
		},
		"check-paths-key-case-sensitive": {
			"description": "'paths' object should not contain the key 'coolpath'",
			"type": "style",
			"given": "$.paths[*]~",
			"severity": "error",
			"message": "{{path}} contained an invalid string '/coolpath/'",
			"then": {
				"function": "pattern",
				"functionOptions": {
					"notMatch": "/coolpath/"
				}
			}
		},
		"check-info-key-case-sensitive": {
			"description": "'info' object should not contain the key 'testString'",
			"type": "style",
			"given": "$.info[*]~",
			"severity": "error",
			"message": "{{path}} contained an invalid string '/testString/'",
			"then": {
				"function": "pattern",
				"functionOptions": {
					"notMatch": "/testString/"
				}
			}
		},
		"check-info-value-case-insensitive": {
			"description": "'info' object should not contain the value 'testString'",
			"type": "style",
			"given": "$..info.*",
			"severity": "error",
			"message": "{{path}} contained an invalid string '/testString/'",
			"then": {
				"function": "pattern",
				"functionOptions": {
					"notMatch": "/testString/i"
				}
			}
		}
	}
}